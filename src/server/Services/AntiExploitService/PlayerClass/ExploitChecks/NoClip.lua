local NoClipCheck = {}

local function dist(v1: Vector3,v2: Vector3)
	return (v1-v2).Magnitude
end

function NoClipCheck:Check(playerObj)--Class
	local passed = true
	local returnMessage = ""
	local playerInfo = playerObj.Info
	
	local rootPos = playerInfo.RootPart.Position
	local lastPos = playerInfo.LastPosition


	local ignore = {}
	for _,player in pairs(game.Players:GetPlayers())do
		if player.Character then
			table.insert(ignore,player.Character)
		end
	end
	
	local raycastParameters = RaycastParams.new()
	raycastParameters.FilterDescendantsInstances = ignore
	raycastParameters.FilterType = Enum.RaycastFilterType.Blacklist
	raycastParameters.IgnoreWater = true
	
	local result = workspace:Raycast(lastPos,(rootPos-lastPos).Unit * dist(lastPos,rootPos),raycastParameters)
	if result then 
		local Part = result.Instance
		if Part:IsA("BasePart") then
			if Part:CanCollideWith(playerInfo.Head) then
				warn("Part hit!")
				passed = false
			end			
		end
		if not passed then
			passed = false
			returnMessage = playerInfo.Name.."'s path went through a wall or something that isn't a descendant of a character. Part:"..Part:GetFullName()
		end
	end

	return passed,returnMessage
end

function NoClipCheck:Punish(playerObj)
	local playerInfo = playerObj.Info
	playerInfo.Player.Character:SetPrimaryPartCFrame(CFrame.new(playerInfo.LastPosition))
end

return NoClipCheck
